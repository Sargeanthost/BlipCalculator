package girraiffe;

import java.util.Map;

import static java.util.Map.entry;

public class TierHelper {
    /** Tier, Height */
    public final Map<Integer, Double> tierMap = Map.<Integer, Double>ofEntries(
            entry(0,     0.1041),
            entry(-1,   -0.3434),
            entry(-2,   -0.8604),
            entry(-3,   -1.4454),
            entry(-4,   -2.0971),
            entry(-5,   -2.8142),
            entry(-6,   -3.5953),
            entry(-7,   -4.4392),
            entry(-8,   -5.3446),
            entry(-9,   -6.3104),
            entry(-10,   -7.3352),
            entry(-11,   -8.4179),
            entry(-12,   -9.5573),
            entry(-13,   -10.7524),
            entry(-14,   -12.0020),
            entry(-15,   -13.3050),
            entry(-16,   -14.6603),
            entry(-17,   -16.0669),
            entry(-18,   -17.5238),
            entry(-19,   -19.0299),
            entry(-20,   -20.5843),
            entry(-21,   -22.1861),
            entry(-22,   -23.8341),
            entry(-23,   -25.5277),
            entry(-24,   -27.2657),
            entry(-25,   -29.0474),
            entry(-26,   -30.8719),
            entry(-27,   -32.7383),
            entry(-28,   -34.6457),
            entry(-29,   -36.5934),
            entry(-30,   -38.5806),
            entry(-31,   -40.6064),
            entry(-32,   -42.6701),
            entry(-33,   -44.7709),
            entry(-34,   -46.9081),
            entry(-35,   -49.0810),
            entry(-36,   -51.2888),
            entry(-37,   -53.5308),
            entry(-38,   -55.8064),
            entry(-39,   -58.1149),
            entry(-40,   -60.4556),
            entry(-41,   -62.8279),
            entry(-42,   -65.2312),
            entry(-43,   -67.6648),
            entry(-44,   -70.1281),
            entry(-45,   -72.6205),
            entry(-46,   -75.1416),
            entry(-47,   -77.6905),
            entry(-48,   -80.2670),
            entry(-49,   -82.8702),
            entry(-50,   -85.4998),
            entry(-51,   -88.1553),
            entry(-52,   -90.8360),
            entry(-53,   -93.5415),
            entry(-54,   -96.2713),
            entry(-55,   -99.0249),
            entry(-56,    101.8018),
            entry(-57,    104.6016),
            entry(-58,    107.4237),
            entry(-59,    110.2679),
            entry(-60,    113.1336),
            entry(-61,    116.0203),
            entry(-62,    118.9277),
            entry(-63,    121.8554),
            entry(-64,    124.8029),
            entry(-65,    127.7698),
            entry(-66,    130.7559),
            entry(-67,    133.7606),
            entry(-68,    136.7836),
            entry(-69,    139.8245),
            entry(-70,    142.8831),
            entry(-71,    145.9588),
            entry(-72,    149.0515),
            entry(-73,    152.1606),
            entry(-74,    155.2861),
            entry(-75,    158.4273),
            entry(-76,    161.5842),
            entry(-77,    164.7564),
            entry(-78,    167.9434),
            entry(-79,    171.1452),
            entry(-80,    174.3613),
            entry(-81,    177.5915),
            entry(-82,    180.8355),
            entry(-83,    184.0930),
            entry(-84,    187.3638),
            entry(-85,    190.6475),
            entry(-86,    193.9440),
            entry(-87,    197.2529),
            entry(-88,    200.5741),
            entry(-89,    203.9072),
            entry(-90,    207.2521),
            entry(-91,    210.6085),
            entry(-92,    213.9761),
            entry(-93,    217.3548),
            entry(-94,    220.7443),
            entry(-95,    224.1445),
            entry(-96,    227.5550),
            entry(-97,    230.9757),
            entry(-98,    234.4064),
            entry(-99,    237.8469),
            entry(-100,   -241.2970),
            entry(-101,   -244.7565),
            entry(-102,   -248.2252),
            entry(-103,   -251.7029),
            entry(-104,   -255.1895)

    );

}
